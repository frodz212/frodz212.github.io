cat(k,'=',k.optm[i],' ')
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
}
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
}
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
}
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
}
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],' ')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
library(class)
i=1
k.optm=1
knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
for (i in 1:28){
+ knn.mod
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
for (i in 1:28){
+ knn.mod
+ k.optm[i]
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
library(class)
i=1
k.optm=1
for (i in 1:28){
+ knn.mod <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=i)
+ k.optm[i] <- 100 * sum(test.binary_labels == knn.mod)/NROW(test.binary_labels)
+ k=i
+ cat(k,'=',k.optm[i],'
')
}
#Normalization
normalize <- function(x)
{return ((x - min(x)) / (max(x) - min(x)))}
binary.n <- as.data.frame(lapply(binary[,2:3], normalize))
set.seed(123)
binary.d <- sample(1:nrow(binary.n),size=nrow(binary.n)*0.7,replace = FALSE) #random selection of 70% data.
train.binary <- binary.n[binary.d,] # 70% training data
test.binary <- binary.n[-binary.d,] # remaining 30% test data
#Creating seperate dataframe for 'Label feature which is our target.
train.binary_labels <- binary[binary.d,1]
test.binary_labels <-binary[-binary.d,1]
library(class)
NROW(train.binary_labels)
knn.3 <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=3)
knn.5 <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=5)
knn.10 <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=10)
knn.15 <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=15)
knn.20 <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=20)
knn.25 <- knn(train=train.binary, test=test.binary, cl=train.binary_labels, k=25)
ACC.3 <- 100 * sum(test.binary_labels == knn.3)/NROW(test.binary_labels)
ACC.5 <- 100 * sum(test.binary_labels == knn.5)/NROW(test.binary_labels)
ACC.10 <- 100 * sum(test.binary_labels == knn.10)/NROW(test.binary_labels)
ACC.15 <- 100 * sum(test.binary_labels == knn.15)/NROW(test.binary_labels)
ACC.20 <- 100 * sum(test.binary_labels == knn.20)/NROW(test.binary_labels)
ACC.25 <- 100 * sum(test.binary_labels == knn.25)/NROW(test.binary_labels)
ACC.26
ACC.27
ACC.3 <- 100 * sum(test.binary_labels == knn.3)/NROW(test.binary_labels)
ACC.5 <- 100 * sum(test.binary_labels == knn.5)/NROW(test.binary_labels)
ACC.10 <- 100 * sum(test.binary_labels == knn.10)/NROW(test.binary_labels)
ACC.15 <- 100 * sum(test.binary_labels == knn.15)/NROW(test.binary_labels)
ACC.20 <- 100 * sum(test.binary_labels == knn.20)/NROW(test.binary_labels)
ACC.25 <- 100 * sum(test.binary_labels == knn.25)/NROW(test.binary_labels)
ACC.3
ACC.5
ACC.10
ACC.15
ACC.20
ACC.25
accurary = c(ACC.3,
ACC.5,
ACC.10,
ACC.15,
ACC.20,
ACC.25)
accurary = c(ACC.3,
ACC.5,
ACC.10,
ACC.15,
ACC.20,
ACC.25)
accurary = table(ACC.3,
ACC.5,
ACC.10,
ACC.15,
ACC.20,
ACC.25)
accurary = c(ACC.3,
ACC.5,
ACC.10,
ACC.15,
ACC.20,
ACC.25)
k-value =c(3, 5, 10, 15, 20, 25)
k_value =c(3, 5, 10, 15, 20, 25)
data <- data.frame(k_value, accurary)
View(data)
plot(data, type="b", xlab="K-Value", ylab="Accuracy")
plot(data, xlab="K-Value", ylab="Accuracy")
, type="b"
plot(data, type="b", xlab="K-Value", ylab="Accuracy")
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(0,25)
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(0,25))
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(0,25))
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(3,25))
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(3,25))
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(0,25))
#Normalization
normalize <- function(x)
{return ((x - min(x)) / (max(x) - min(x)))}
trinary.n <- as.data.frame(lapply(trinary[,2:3], normalize))
set.seed(123)
trinary.d <- sample(1:nrow(trinary.n),size=nrow(trinary.n)*0.7,replace = FALSE) #random selection of 70% data.
train.trinary <- trinary.n[trinary.d,] # 70% training data
test.trinary <- trinary.n[-trinary.d,] # remaining 30% test data
#Creating seperate dataframe for 'Label feature which is our target.
train.trinary_labels <- trinary[binary.d,1]
test.trinary_labels <-trinary[-trinary.d,1]
library(class)
NROW(train.binary_labels)
knn.3 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=3)
#Normalization
normalize <- function(x)
{return ((x - min(x)) / (max(x) - min(x)))}
trinary.n <- as.data.frame(lapply(trinary[,2:3], normalize))
set.seed(123)
trinary.d <- sample(1:nrow(trinary.n),size=nrow(trinary.n)*0.7,replace = FALSE) #random selection of 70% data.
train.trinary <- trinary.n[trinary.d,] # 70% training data
test.trinary <- trinary.n[-trinary.d,] # remaining 30% test data
#Creating seperate dataframe for 'Label feature which is our target.
train.trinary_labels <- trinary[trinary.d,1]
test.trinary_labels <-trinary[-trinary.d,1]
library(class)
NROW(train.binary_labels)
knn.3 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=3)
knn.5 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=5)
knn.10 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=10)
knn.15 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=15)
knn.20 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=20)
knn.25 <- knn(train=train.trinary, test=test.trinary, cl=train.trinary_labels, k=25)
trinary.ACC.3 <- 100 * sum(test.trinary_labels == knn.3)/NROW(test.trinary_labels)
trinary.ACC.5 <- 100 * sum(test.trinary_labels == knn.5)/NROW(test.trinary_labels)
trinary.ACC.10 <- 100 * sum(test.trinary_labels == knn.10)/NROW(test.trinary_labels)
trinary.ACC.15 <- 100 * sum(test.trinary_labels == knn.15)/NROW(test.trinary_labels)
trinary.ACC.20 <- 100 * sum(test.trinary_labels == knn.20)/NROW(test.trinary_labels)
trinary.ACC.25 <- 100 * sum(test.trinary_labels == knn.25)/NROW(test.trinary_labels)
trinary.ACC.3
trinary.ACC.5
trinary.ACC.10
trinary.ACC.15
trinary.ACC.20
trinary.ACC.25
accurary = c(trinary.ACC.3,
trinary.ACC.5,
trinary.ACC.10,
trinary.ACC.15,
trinary.ACC.20,
trinary.ACC.25)
k_value =c(3, 5, 10, 15, 20, 25)
data <- data.frame(k_value, accurary)
plot(data, type="b", xlab="K-Value", ylab="Accuracy", xlim=c(0,25))
data_cluster <- read.csv("clustering-data.csv")
setwd("/Users/feliperodriguez/OneDrive - Bellevue University/Github/dsc520/data/")
data_cluster <- read.csv("clustering-data.csv")
setwd("/Users/feliperodriguez/OneDrive - Bellevue University/Github/dsc520/data/")
data_cluster <- read.csv("clustering-data.csv")
View(data_cluster)
ggplot(data_cluster, aes(x = x, y = y)) + geom_point()
knn.10
as.data.frame(knn.10)
plot(knn.3m, data=trinary)
plot(knn.3, data=trinary)
data_cluster_k2 <- kmeans(x=data_cluster, centers = 2)
View(data_cluster_k2)
plot(data_cluster_k2, data=data_cluster)
plot.kmeans(data_cluster_k2, data=data_cluster)
plot(data_cluster_k2, data=data_cluster)
View(data_cluster_k2)
data_cluster_k2
library(useful)
install.packages("useful")
plot(data_cluster_k2, data=data_cluster)
library(useful)
plot(data_cluster_k2, data=data_cluster)
data_cluster_k12 <- kmeans(x=data_cluster, centers = 12)
data_cluster_k12
library(useful)
plot(data_cluster_k12, data=data_cluster)
k.values <- 1:15
bws <- function(k){
kmeans(data_cluster, k, nstart = 10)$betweenss
}
bws.values <- data_cluster(k.values, bws)
k.values <- 1:15
bws <- function(k){
kmeans(data_cluster, k, nstart = 10)$betweenss
}
bws.values <- map_dbl(k.values, bws)
library(purrr)
library(purrr)
k.values <- 1:15
bws <- function(k){
kmeans(data_cluster, k, nstart = 10)$betweenss
}
bws.values <- map_dbl(k.values, bws)
plot(k.values, bws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Betweenss")
set.seed(123)
set.seed(123)
library(purrr)
k.values <- 1:15
bws <- function(k){
kmeans(data_cluster, k, nstart = 10)$betweenss
}
bws.values <- map_dbl(k.values, bws)
plot(k.values, bws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Betweenss")
set.seed(123)
library(purrr)
k.values <- 1:15
bws <- function(k){
kmeans(data_cluster, k, nstart = 10)$betweenss
}
bws.values <- map_dbl(k.values, bws)
plot(k.values, bws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Betweenss")
set.seed(123)
fviz_nbclust(data_cluster, kmeans, method = "wss")
install.packages("factoextra")
install.packages("factoextra")
knitr::opts_chunk$set(echo = TRUE)
set.seed(123)
library(factoextra)
fviz_nbclust(data_cluster, kmeans, method = "wss")
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Y")
kmeans(data_cluster, k)$tot.withinss/NROW(data_cluster)
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Y")
kmeans(data_cluster, k, nstart = 1)$tot.withinss/NROW(data_cluster)
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Y")
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 1)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Y")
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Total Y")
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW")
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim(0, 15)
set.seed(123)
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim(0, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(0, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(0, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 16))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 15))
``
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 15))
``
set.seed(123)
library(factoextra)
fviz_nbclust(data_cluster, kmeans, method = "wss")
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW", xlim=c(1, 15))
set.seed(123)
library(purrr)
k.values <- 1:15
wws <- function(k){
kmeans(data_cluster, k, nstart = 10)$tot.withinss/NROW(data_cluster)
}
wws.values <- map_dbl(k.values, wws)
plot(k.values, wws.values, type="b", pch=19, frame=FALSE, xlab="Number of Clusters", ylab="Distance (Sum of squares/NROW)", xlim=c(1, 15))
getwd()
setwd("/Users/feliperodriguez/OneDrive - Bellevue University/DSC 520 Statistics/Week 11/")
setwd("/Users/feliperodriguez/OneDrive - Bellevue University/DSC 520 Statistics/Week 11/")
